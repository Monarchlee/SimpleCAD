#pragma kernel Recover

struct Triangle {
    float3 vertexC;
    float3 vertexB;
    float3 vertexA;
    uint3 cubeID;
};

ConsumeStructuredBuffer<Triangle> input;
AppendStructuredBuffer<Triangle> output;

int numTris;

float3 cellSize;
float3 center;
float radius;

[numthreads(256,1,1)]
void Recover (uint3 id : SV_DispatchThreadID)
{
    if(id.x >= (uint)numTris) return;

    Triangle tri = input.Consume();
    float3 delta = (tri.cubeID - center) * cellSize;
    if(length(delta) <= radius) return;
    output.Append(tri);
}
